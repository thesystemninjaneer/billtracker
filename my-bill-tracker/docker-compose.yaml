#use docker-compose to manage services.
version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: bill-tracker-mysql
    environment:
      MYSQL_ROOT_PASSWORD: your_strong_root_password
      MYSQL_DATABASE: bill_tracker_db
      MYSQL_USER: bill_user
      MYSQL_PASSWORD: your_db_password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: always
    #TODO: patch to run sql script to setup db schema ie: "COPY init.sql /docker-entrypoint-initdb.d" 

  organization-service:
    build:
      context: ./backend/organization-service
      dockerfile: Dockerfile
    container_name: bill-tracker-organization-service
    ports:
      - "3001:3001"
    environment:
      DB_HOST: db
      DB_USER: bill_user
      DB_PASSWORD: your_db_password
      DB_NAME: bill_tracker_db
      DB_PORT: 3306
      SERVICE_PORT: 3001
      JWT_SECRET: your_jwt_secret_key_very_long_and_random # ⚠️ Add this line, match User Service's secret!
    depends_on:
      db:
        condition: service_healthy
    restart: always

  user-service:
    build:
      context: ./backend/user-service # Path to your Dockerfile for this service
      dockerfile: Dockerfile
    container_name: bill-tracker-user-service
    ports:
      - "3000:3000" # Map service port to host port
    environment:
      DB_HOST: db
      DB_USER: bill_user
      DB_PASSWORD: your_db_password
      DB_NAME: bill_tracker_db
      DB_PORT: 3306
      SERVICE_PORT: 3000
      JWT_SECRET: your_jwt_secret_key_very_long_and_random # ⚠️ Match this with .env
    depends_on:
      db:
        condition: service_healthy
    restart: always

volumes:
  db_data: